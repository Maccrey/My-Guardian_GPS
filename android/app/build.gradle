plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

android {
    namespace = "com.example.gps_seach"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.example.gps_seach"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
        
        // .env 파일에서 환경 변수 값 읽기
        def envFile = new File(project.rootProject.projectDir.parentFile, '.env')
        def properties = new Properties()
        if (envFile.exists()) {
            envFile.withReader('UTF-8') { reader ->
                def lines = reader.readLines()
                lines.each { line ->
                    def keyValue = line.split('=', 2)
                    if (keyValue.length == 2) {
                        def key = keyValue[0].trim()
                        def value = keyValue[1].trim()
                        properties.put(key, value)
                    }
                }
            }
        }
        
        // Google Maps API 키를 resValue로 정의
        resValue "string", "google_maps_api_key", properties.getProperty("GOOGLE_MAPS_API_KEY", "")
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source "../.."
}
